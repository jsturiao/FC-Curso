version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ecommerce-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: ecommerce
    networks:
      - ecommerce-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  mongodb:
    image: mongo:7.0
    container_name: ecommerce-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ecommerce
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  ecommerce-app:
    build: ./ecommerce-app
    container_name: ecommerce-app
    ports:
      - "3000:3000"     # Web interface
      - "3001:3001"     # API
    environment:
      NODE_ENV: development
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/ecommerce
      MONGODB_URL: mongodb://admin:admin123@mongodb:27017/ecommerce?authSource=admin
      PORT: 3000
      API_PORT: 3001
    networks:
      - ecommerce-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    command: npm run dev

volumes:
  rabbitmq_data:
  mongodb_data:

networks:
  ecommerce-network:
    driver: bridge
